AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CustomerName:
    Type: String
    Description: Customer-1
    Default: Customer-1

Resources:
  # S3 Bucket Creation
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  # Bucket Policy to allow public access
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'

  # Custom Resource for index.html upload
  S3BucketIndexHtml:
    Type: 'Custom::S3Object'
    Properties:
      ServiceToken: !GetAtt S3BucketFunction.Arn
      BucketName: !Ref S3Bucket
      Key: 'index.html'
      Content: !Sub |
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
            <link rel="stylesheet" href="index.css">
            <script src="index.js"></script>
            <title>Cloud Watch Metrics</title>
            <style>
                body {
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    background-color: #ffffff;
                    margin: 0;
                    padding: 0;
                    color: #2c3e50;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    flex-direction: column;
                    min-height: 100vh;
                    background-image: url('https://cdwcustomapplication.s3.amazonaws.com/image_(4)-j1f3dsnvn-transformed.jpeg');
                    background-size: contain; /* Fits the image proportionally */
                    background-position: center;
                    background-repeat: no-repeat; /* Prevents tiling of the image */
                    background-attachment: fixed; /* Keeps the image fixed while scrolling */
                }
                .container {
                    margin-top: 20px;
                    background-color: rgba(255, 255, 255, 0.85);
                    border-radius: 15px;
                    padding: 30px;
                    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
                }
                .row {
                    margin-bottom: 20px;
                }
                p {
                    font-size: 28px;
                    font-weight: bold;
                    color: #1a3e59; /* Deep navy blue for the text */
                }
                label {
                    font-weight: bold;
                    color: #ff4d4d;
                }
                input[type="number"],
                select {
                    border: 2px solid #ff4d4d;
                    border-radius: 5px;
                    padding: 10px;
                    font-size: 16px;
                }
                button {
                    background-color: #ff4d4d;
                    color: white;
                    font-weight: bold;
                    padding: 10px 20px;
                    border-radius: 30px;
                    border: none;
                    transition: background-color 0.3s ease, transform 0.3s ease;
                }
                button:hover {
                    background-color: #e03b3b;
                    transform: scale(1.05);
                }
                a {
                    display: inline-block;
                    margin-top: 20px;
                    text-decoration: none;
                    color: white;
                    background-color: #2c3e50;
                    padding: 10px 25px;
                    border-radius: 25px;
                    transition: background-color 0.3s ease;
                }
                a:hover {
                    background-color: #34495e;
                }
            </style>
        </head>
        <body>
            <img src="cdw-2023-Red.png" alt="CDW Logo">
            <div class="container">
                <div class="row">
                    <div class="col-sm m-1">
                        <section style="text-align: center">
                            <p>Customer-1 Orange Team</p>
                            <br><br>
                        </section>
                    </div>
                </div>
                <div class="row justify-content-center">
                    <div class="col">
                        <form>
                            <div class="form-group">
                                <label for="timeframeLength">Duration:</label>
                                <input type="number" min="1" max="100" onkeypress="return event.charCode >= 48" class="form-control" id="timeframeLength" aria-describedby="timeframeLength" placeholder="2" oninput="enableButton()">
                            </div>
                        </form>
                    </div>
                    <div class="col">
                        <label for="timeframeUnit">Unit of time:</label>
                        <select name="timeframeUnit" id="timeframeUnit" class="custom-select">
                            <option selected>Weeks</option>
                            <option value="minutes">Minutes</option>
                            <option value="hours">Hours</option>
                            <option value="days">Days</option>
                        </select>
                    </div>
                    <div class="col" style="display: flex; justify-content: center; align-items: center;">
                        <button type="button" class="btn btn-secondary btn-block" style="margin-top: 13px;" id="customTimeButton" onClick="submitCustomTimeframe()" disabled>Go</button>
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row justify-content-center" id="sectionResults">
                    <section style="text-align: center" class="row loading">
                        <!-- Loading results will appear here -->
                    </section>
                </div>
                <div class="row">
                    <section class="col" id="results">
                        <!-- Results will be displayed here -->
                    </section>
                </div>
            </div>
            <a href="https://myuserpool-domain.auth.us-east-1.amazoncognito.com/logout?client_id=3qtbgn503ttnmd75qc6iat3vnt&logout_uri=https%3A%2F%2Fcdwcustomer1.s3.amazonaws.com%2Flogged_out.html">Click to log out</a>
            <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
            <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        </body>
        </html>
      ContentType: 'text/html'

  S3BucketIndexCss:
    Type: 'Custom::S3Object'
    Properties:
      ServiceToken: !GetAtt S3BucketFunction.Arn
      BucketName: !Ref S3Bucket
      Key: 'index.css'
      Content: |
        /* table, th, td {
            border: 1px solid black;
        } */
        th, td {
            padding: 5px;
            text-align: center;
        }
        p {
            font-size: 50px;
        }
        #timeframeLength:focus::placeholder {
            color: transparent;
        }
      ContentType: 'text/css'

  S3BucketIndexJs:
    Type: 'Custom::S3Object'
    Properties:
      ServiceToken: !GetAtt S3BucketFunction.Arn
      BucketName: !Ref S3Bucket
      Key: 'index.js'
      Content: |
        async function initialFetchCloudWatchData() {
            let baseURL = "https://x36h4lqlfi.execute-api.us-east-1.amazonaws.com/testing/yamlcloudwatchtest"; // Make sure to change to your own URL.
            let response = await fetch(baseURL);
            let data = await response.json();
            let results = data.body;
            let responseData = JSON.parse(results);
            let dataBody = responseData.response.data;
            let metrics = responseData.response.metrics;
            displayResults(dataBody, metrics);
        }
        
        function enableButton() {
            let inputValue = document.getElementById('timeframeLength').value;
            let button = document.getElementById('customTimeButton');
            if (inputValue.length > 0) {
                button.disabled = false;
            } else {
                button.disabled = true;
            }
        }
        
        async function submitCustomTimeframe() {
            const unit = document.getElementById("timeframeUnit").value;
            const length = document.getElementById("timeframeLength").value;
            console.log(unit, length);
            let response = await fetch("https://x36h4lqlfi.execute-api.us-east-1.amazonaws.com/testing/yamlcloudwatchtest",
            {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ unit: unit, length: length })
            });
            if (response.ok) {
                initialFetchCloudWatchData();
            } else {
                console.error("Error submitting timeframe");
            }
        }
        
        window.onload = initialFetchCloudWatchData;
      ContentType: 'text/javascript'

  # Lambda function for uploading objects
  S3BucketFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          const s3 = new AWS.S3();
          
          exports.handler = async (event) => {
              const bucketName = event.ResourceProperties.BucketName;
              const objectKey = event.ResourceProperties.Key;
              const content = event.ResourceProperties.Content;
              const contentType = event.ResourceProperties.ContentType;
          
              const params = {
                  Bucket: bucketName,
                  Key: objectKey,
                  Body: content,
                  ContentType: contentType,
              };
          
              await s3.putObject(params).promise();
          
              return { Status: 'SUCCESS' };
          };
      Runtime: nodejs14.x
      Timeout: 30
      MemorySize: 128

  # IAM Role for Lambda function
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3PutPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
